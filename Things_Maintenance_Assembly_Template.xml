<?xml version="1.0" encoding="UTF-8"?>
<Entities
 majorVersion="9"
 minorVersion="1"
 universal="password">
    <Things>
        <Thing
         description=""
         documentationContent=""
         effectiveThingPackage="DataTableThing"
         enabled="true"
         homeMashup="DataTableEditor"
         identifier=""
         inheritedValueStream=""
         name="Maintenance_Assembly_Template"
         projectName="Maintenance_Template_Project"
         published="false"
         tags=""
         thingTemplate="DataTable"
         valueStream="">
            <avatar></avatar>
            <DesignTimePermissions>
                <Create></Create>
                <Read></Read>
                <Update></Update>
                <Delete></Delete>
                <Metadata></Metadata>
            </DesignTimePermissions>
            <RunTimePermissions></RunTimePermissions>
            <VisibilityPermissions>
                <Visibility></Visibility>
            </VisibilityPermissions>
            <ConfigurationTableDefinitions></ConfigurationTableDefinitions>
            <ConfigurationTables>
                <ConfigurationTable
                 dataShapeName=""
                 description="Data Thing Configuration"
                 isMultiRow="false"
                 name="DataThingSettings"
                 ordinal="0">
                    <DataShape>
                        <FieldDefinitions>
                            <FieldDefinition
                             baseType="STRING"
                             description="Persistence Provider Name"
                             name="persistenceProvider"
                             ordinal="0"></FieldDefinition>
                        </FieldDefinitions>
                    </DataShape>
                    <Rows>
                        <Row>
                            <persistenceProvider>
                            <![CDATA[
                            ThingworxPersistenceProvider
                            ]]>
                            </persistenceProvider>
                        </Row>
                    </Rows>
                </ConfigurationTable>
                <ConfigurationTable
                 dataShapeName=""
                 description="Data Shape Configuration"
                 isMultiRow="false"
                 name="Settings"
                 ordinal="0">
                    <DataShape>
                        <FieldDefinitions>
                            <FieldDefinition
                             aspect.friendlyName="Data Shape"
                             baseType="DATASHAPENAME"
                             description="Data shape"
                             name="dataShape"
                             ordinal="0"></FieldDefinition>
                        </FieldDefinitions>
                    </DataShape>
                    <Rows>
                        <Row>
                            <accumulatedDataShape>
                                <json>
                                <![CDATA[
                                {"fieldDefinitions":{"VuforiaUserName":{"name":"VuforiaUserName","aspects":{"isDeleted":true,"isPrimaryKey":false},"description":"","baseType":"STRING","ordinal":10},"VuforiaPictureNumber":{"name":"VuforiaPictureNumber","aspects":{"isPrimaryKey":true},"description":"","baseType":"LONG","ordinal":5},"vuforiaPicture":{"name":"vuforiaPicture","aspects":{"isDeleted":true,"isPrimaryKey":false},"description":"","baseType":"IMAGE","ordinal":4},"TimeTotal":{"name":"TimeTotal","aspects":{"isPrimaryKey":false},"description":"","baseType":"STRING","ordinal":8},"StepsStarted":{"name":"StepsStarted","aspects":{"isPrimaryKey":false},"description":"","baseType":"BOOLEAN","ordinal":1},"totalTime":{"name":"totalTime","aspects":{"isDeleted":true,"isPrimaryKey":false},"description":"","baseType":"STRING","ordinal":2},"VuforiaMaintNotes":{"name":"VuforiaMaintNotes","aspects":{"isPrimaryKey":false},"description":"","baseType":"STRING","ordinal":3},"VuforiaPicture":{"name":"VuforiaPicture","aspects":{"isPrimaryKey":false},"description":"","baseType":"IMAGE","ordinal":9},"StepsFinished":{"name":"StepsFinished","aspects":{"isPrimaryKey":false},"description":"","baseType":"BOOLEAN","ordinal":0},"VuforiaPictureText":{"name":"VuforiaPictureText","aspects":{"isPrimaryKey":false},"description":"","baseType":"STRING","ordinal":6},"VuforiaUsername":{"name":"VuforiaUsername","aspects":{"isDeleted":false,"isPrimaryKey":false},"description":"","baseType":"STRING","ordinal":7}}}
                                ]]>
                                </json>
                            </accumulatedDataShape>
                            <dataShape>
                            <![CDATA[
                            Maintenance_Template_DataShape
                            ]]>
                            </dataShape>
                        </Row>
                    </Rows>
                </ConfigurationTable>
                <ConfigurationTable
                 dataShapeName=""
                 description="Index Settings"
                 isMultiRow="true"
                 name="Indexes"
                 ordinal="1">
                    <DataShape>
                        <FieldDefinitions>
                            <FieldDefinition
                             aspect.friendlyName="Index Field Names"
                             baseType="STRING"
                             description="Index fields"
                             name="fieldNames"
                             ordinal="1"></FieldDefinition>
                            <FieldDefinition
                             aspect.friendlyName="Index Name"
                             baseType="STRING"
                             description="Index name"
                             name="name"
                             ordinal="0"></FieldDefinition>
                        </FieldDefinitions>
                    </DataShape>
                    <Rows></Rows>
                </ConfigurationTable>
                <ConfigurationTable
                 dataShapeName=""
                 description="Configurable options to tune Data Table performance"
                 isMultiRow="false"
                 name="PersistenceProviderCustomSettings"
                 ordinal="2">
                    <DataShape>
                        <FieldDefinitions>
                            <FieldDefinition
                             aspect.friendlyName="Persistence Provider Custom Settings Table"
                             baseType="INFOTABLE"
                             description="Persistence Provider Custom Config Table"
                             name="customConfigTable"
                             ordinal="0"></FieldDefinition>
                        </FieldDefinitions>
                    </DataShape>
                    <Rows>
                        <Row>
                            <customConfigTable>
                                <infoTable>
                                    <DataShape>
                                        <FieldDefinitions></FieldDefinitions>
                                    </DataShape>
                                    <Rows></Rows>
                                </infoTable>
                            </customConfigTable>
                        </Row>
                    </Rows>
                </ConfigurationTable>
            </ConfigurationTables>
            <ThingShape>
                <PropertyDefinitions>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isPersistent="true"
                     baseType="STRING"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="imageText"
                     ordinal="3"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isPersistent="true"
                     baseType="STRING"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="maintenanceNotes"
                     ordinal="7"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isPersistent="true"
                     baseType="IMAGE"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="maintenancePicture"
                     ordinal="2"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isPersistent="true"
                     baseType="STRING"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="nameInput"
                     ordinal="4"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isPersistent="true"
                     baseType="LONG"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="pictureNumber"
                     ordinal="5"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isLogged="true"
                     aspect.isPersistent="true"
                     baseType="BOOLEAN"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="SequenceFinished"
                     ordinal="9"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isLogged="true"
                     aspect.isPersistent="true"
                     baseType="BOOLEAN"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="SequenceStarted"
                     ordinal="8"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isPersistent="true"
                     baseType="STRING"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="TotalTime"
                     ordinal="9"></PropertyDefinition>
                </PropertyDefinitions>
                <ServiceDefinitions>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="addEndTime">
                        <ResultType
                         baseType="NOTHING"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="newEnd"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="addStartTime">
                        <ResultType
                         baseType="NOTHING"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="newStart"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getTotalTime">
                        <ResultType
                         baseType="NOTHING"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="newImage">
                        <ResultType
                         baseType="NOTHING"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="newImage"
                             ordinal="1"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="newNotes"
                             ordinal="3"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="newUsername"
                             ordinal="2"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="queryEntries">
                        <ResultType
                         baseType="NOTHING"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="querySize"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                </ServiceDefinitions>
                <EventDefinitions></EventDefinitions>
                <ServiceMappings></ServiceMappings>
                <ServiceImplementations>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="addEndTime">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        // tags:TAGS
                                        let tags = new Array();
                                        
                                        // values:INFOTABLE(Datashape: JS_Maint_Template_DataShape)
                                        let values = Things["JS_Maint_Template_DataTable"].CreateValues();
                                        values.StepsFinished = newEnd; // BOOLEAN
                                        newEnd = true;
                                        me.SequenceFinished = newEnd;
                                        
                                        // location:LOCATION
                                        let location = {
                                            latitude: 0,
                                            longitude: 0,
                                            elevation: 0,
                                            units: "WGS84"
                                        };
                                        
                                        let params = {
                                        	tags: tags,
                                        	source: me.name,
                                        	values: values,
                                        	location: location
                                        };
                                        
                                        // AddOrUpdateDataTableEntry(tags:TAGS, source:STRING("me.name"), values:INFOTABLE(JS_Maint_Template_DataTable), location:LOCATION):STRING
                                        let id = Things["JS_Maint_Template_DataTable"].AddOrUpdateDataTableEntry(params);
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="addStartTime">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        // tags:TAGS
                                        let tags = new Array();
                                        
                                        // values:INFOTABLE(Datashape: JS_Maint_Template_DataShape)
                                        let values = Things["JS_Maint_Template_DataTable"].CreateValues();
                                        values.StepsStarted = newStart; // BOOLEAN
                                        newStart = true;
                                        me.SequenceStarted = newStart;
                                        
                                        // location:LOCATION
                                        let location = {
                                            latitude: 0,
                                            longitude: 0,
                                            elevation: 0,
                                            units: "WGS84"
                                        };
                                        
                                        let params = {
                                        	tags: tags,
                                        	source: me.name,
                                        	values: values,
                                        	location: location
                                        };
                                        
                                        // AddOrUpdateDataTableEntry(tags:TAGS, source:STRING("me.name"), values:INFOTABLE(JS_Maint_Template_DataTable), location:LOCATION):STRING
                                        let id = Things["JS_Maint_Template_DataTable"].AddOrUpdateDataTableEntry(params);
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getTotalTime">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        // Time: DATETIME
                                        let endTime = me.GetPropertyTime({
                                        	propertyName: "SequenceFinished" /* STRING */
                                        });
                                        let startTime = me.GetPropertyTime({
                                        	propertyName: "SequenceStarted" /* STRING */
                                        });
                                        
                                        me.TotalTime = ((endTime - startTime)/1000) + " seconds";
                                        
                                        // tags:TAGS
                                        let tags = new Array();
                                        
                                        // values:INFOTABLE(Datashape: JS_Maint_Template_DataShape)
                                        let values = Things["JS_Maint_Template_DataTable"].CreateValues();
                                        values.VuforiaPictureNumber = me.pictureNumber; // LONG [Primary Key]
                                        values.totalTime = me.TotalTime; // STRING
                                        
                                        me.TotalTime = ((endTime - startTime)/1000) + " seconds";
                                        
                                        // location:LOCATION
                                        let location = {
                                            latitude: 0,
                                            longitude: 0,
                                            elevation: 0,
                                            units: "WGS84"
                                        };
                                        
                                        let params = {
                                        	tags: tags,
                                        	source: me.name,
                                        	values: values,
                                        	location: location
                                        };
                                        
                                        // AddOrUpdateDataTableEntry(tags:TAGS, source:STRING("me.name"), values:INFOTABLE(JS_Maint_Template_DataTable), location:LOCATION):STRING
                                        let id = Things["JS_Maint_Template_DataTable"].AddOrUpdateDataTableEntry(params);
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="newImage">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        // tags:TAGS
                                        let tags = new Array();
                                        
                                        // values:INFOTABLE(Datashape: JS_Maint_Template_DataShape)
                                        let values = Things["JS_Maint_Template_DataTable"].CreateValues();
                                        me.pictureNumber = me.pictureNumber +1;
                                        values.VuforiaPictureNumber = me.pictureNumber; // LONG
                                        values.vuforiaPicture = newImage; // IMAGE
                                        values.VuforiaPictureText = newImage; // STRING [Primary Key]
                                        values.VuforiaMaintNotes = newNotes; // STRING
                                        values.VuforiaUsername = newUsername; // STRING
                                        values.StepsStarted = me.SequenceStarted; // BOOLEAN
                                        values.StepsFinished = me.SequenceFinished; // BOOLEAN
                                        
                                        me.maintenancePicture = newImage;
                                        me.imageText = newImage;
                                        me.nameInput = newUsername;
                                        me.maintenanceNotes = newNotes;
                                        
                                        // location:LOCATION
                                        let location = {
                                            latitude: 0,
                                            longitude: 0,
                                            elevation: 0,
                                            units: "WGS84"
                                        };
                                        
                                        let params = {
                                        	tags: tags,
                                        	source: me.name,
                                        	values: values,
                                        	location: location
                                        };
                                        
                                        // AddOrUpdateDataTableEntry(tags:TAGS, source:STRING("me.name"), values:INFOTABLE(JS_Maint_Template_DataTable), location:LOCATION):STRING
                                        let id = Things["JS_Maint_Template_DataTable"].AddOrUpdateDataTableEntry(params);
                                        
                                        
                                        
                                        //
                                        ///
                                        //
                                        //
                                        //
                                        // tags:TAGS
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="queryEntries">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        me.GetDataTableEntries({
                                        	maxItems: querySize /* NUMBER */
                                        });
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                </ServiceImplementations>
                <Subscriptions></Subscriptions>
            </ThingShape>
            <PropertyBindings></PropertyBindings>
            <RemotePropertyBindings></RemotePropertyBindings>
            <RemoteServiceBindings></RemoteServiceBindings>
            <RemoteEventBindings></RemoteEventBindings>
            <AlertConfigurations>
                <AlertDefinitions
                 name="imageText"></AlertDefinitions>
                <AlertDefinitions
                 name="maintenanceNotes"></AlertDefinitions>
                <AlertDefinitions
                 name="maintenancePicture"></AlertDefinitions>
                <AlertDefinitions
                 name="nameInput"></AlertDefinitions>
                <AlertDefinitions
                 name="pictureNumber"></AlertDefinitions>
                <AlertDefinitions
                 name="SequenceFinished"></AlertDefinitions>
                <AlertDefinitions
                 name="SequenceStarted"></AlertDefinitions>
                <AlertDefinitions
                 name="TotalTime"></AlertDefinitions>
            </AlertConfigurations>
            <ImplementedShapes></ImplementedShapes>
            <ThingProperties>
                <imageText>
                    <Value>
                    <![CDATA[
                    
                    ]]>
                    </Value>
                    <Timestamp>2021-07-20T05:03:17.571Z</Timestamp>
                    <Quality>GOOD</Quality>
                </imageText>
                <pictureNumber>
                    <Value>3</Value>
                    <Timestamp>2021-07-20T05:03:17.570Z</Timestamp>
                    <Quality>GOOD</Quality>
                </pictureNumber>
                <maintenanceNotes>
                    <Value>
                    <![CDATA[
                    Nothing to note
                    ]]>
                    </Value>
                    <Timestamp>2021-07-20T05:03:17.572Z</Timestamp>
                    <Quality>GOOD</Quality>
                </maintenanceNotes>
                <maintenancePicture>
                    <Value>/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAMCAgICAgMCAgIDAwMDBAYEBAQEBAgGBgUGCQgKCgkI
CQkKDA8MCgsOCwkJDRENDg8QEBEQCgwSExIQEw8QEBD/2wBDAQMDAwQDBAgEBAgQCwkLEBAQEBAQ
EBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBD/wAARCARJAegDASIA
AhEBAxEB/8QAHQABAQEAAgMBAQAAAAAAAAAAAAIBAwcEBQYICf/EAEYQAAIBAgQEAgcFBwMDAgYD
AAABAgMRBBIhMQUGQVEyYQcTInGBkdEjobHB4QgUM0JScvAVQ2KCsvGSohYkNHODwiVTs//EABQB
AQAAAAAAAAAAAAAAAAAAAAD/xAAUEQEAAAAAAAAAAAAAAAAAAAAA/9oADAMBAAIRAxEAPwD+koAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
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
AhFq7lrJ7/Qpq4AE7A2RgAlrqUY9gJAAH//Z</Value>
                    <Timestamp>2021-07-20T05:03:17.571Z</Timestamp>
                    <Quality>GOOD</Quality>
                </maintenancePicture>
                <SequenceStarted>
                    <Value>true</Value>
                    <Timestamp>2021-07-20T05:02:55.794Z</Timestamp>
                    <Quality>GOOD</Quality>
                </SequenceStarted>
                <TotalTime>
                    <Value>
                    <![CDATA[
                    13.69 seconds
                    ]]>
                    </Value>
                    <Timestamp>2021-07-20T05:03:17.274Z</Timestamp>
                    <Quality>GOOD</Quality>
                </TotalTime>
                <SequenceFinished>
                    <Value>true</Value>
                    <Timestamp>2021-07-20T05:03:09.484Z</Timestamp>
                    <Quality>GOOD</Quality>
                </SequenceFinished>
                <nameInput>
                    <Value>
                    <![CDATA[
                    Jessica Stastny
                    ]]>
                    </Value>
                    <Timestamp>2021-07-20T05:03:17.572Z</Timestamp>
                    <Quality>GOOD</Quality>
                </nameInput>
            </ThingProperties>
        </Thing>
    </Things>
</Entities>
